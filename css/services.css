.facbreadcrum {
    position: relative;
    text-align: center;
    color: black;}
  .midle {
   
    padding: 15px;
    font-weight: 1000;
    font-size: 50px;
  font-family: 'Playfair Display', serif;;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
  .ob{
    font-weight: 400px;
    color: orangered;
    font-size: 30px;
  }

  .ser-heading{
    font-size: 40px;
    font-weight: bold;
    text-align: center;
    color: #031640;
    font-family: 'Volkhov', serif;
    
}
.paras{
    padding-left: 60px;
    padding-right: 60px;
      font-size: 20px;
      text-align: justify;
      color: black;
      font-family: 'Titillium Web', sans-serif;
  }
  @media screen and (max-width: 480px) {
    .midle{
      margin-top: 10px;
     font-size: 24px;
    }
    .ob{
      font-size: 15px;
    }
    .facbreadcrum {
     margin-top: 8px;}
     .but{
       padding: 5px;
     }
    }

    /*

All grid code is placed in a 'supports' rule (feature query) at the bottom of the CSS (Line 77). 
        
The 'supports' rule will only run if your browser supports CSS grid.

Flexbox is used as a fallback so that browsers which don't support grid will still recieve an identical layout.

*/

@import url(https://fonts.googleapis.com/css?family=Montserrat:500);


/* *,
*::before,
*::after {
	box-sizing: border-box;
}

body {
	min-height: 100vh;
	background-color: #fafafa;
} */

.container {
	max-width: 80rem;
	margin: 0 auto;
	padding: 0 2rem 2rem;
}

.heading {
	font-family: "Montserrat", Arial, sans-serif;
	font-size: 4rem;
	font-weight: 500;
	line-height: 1.5;
	text-align: center;
	padding: 3.5rem 0;
	color: #1a1a1a;
}

.heading span {
	display: block;
}

.gallery {
	display: flex;
	flex-wrap: wrap;
	/* Compensate for excess margin on outer gallery flex items */
	margin: -1rem -1rem;
}

.gallery-item {
	/* Minimum width of 24rem and grow to fit available space */
	flex: 1 0 24rem;
	/* Margin value should be half of grid-gap value as margins on flex items don't collapse */
	margin: 1rem;
	box-shadow: 0.3rem 0.4rem 0.4rem rgba(0, 0, 0, 0.4);
	overflow: hidden;
}

.gallery-image {
	display: block;
	width: 100%;
	height: 80%;
	object-fit: cover;
	transition: transform 400ms ease-out;
}

.gallery-image:hover {
	transform: scale(1.15);
}

/*

The following rule will only run if your browser supports CSS grid.

Remove or comment-out the code block below to see how the browser will fall-back to flexbox styling. 

*/

@supports (display: grid) {
	.gallery {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24rem, 1fr));
		grid-gap: 2rem;
	}

	.gallery,
	.gallery-item {
		margin: 0;
	}
}














